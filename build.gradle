buildscript {
    ext.spring_version = '2.2.0.RELEASE'
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:$spring_version")
        classpath("org.owasp:dependency-check-gradle:5.2.2")
        classpath("org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.8.3")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.owasp.dependencycheck'
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'

jacoco {
    toolVersion = "0.8.4+"
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
    }
}
[compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

//runtime("org.springframework.boot:spring-boot-properties-migrator")
jar {
    archivesBaseName = 'pirateboat'
    archiveVersion = '0.6.9'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 13
targetCompatibility = 13

dependencies {
    // tag::jetty[]
    compile("org.springframework.boot:spring-boot-starter-web:$spring_version") {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-jetty', version: "$spring_version"
    // end::jetty[]
    // tag::actuator[]
    compile("org.springframework.boot:spring-boot-starter-actuator:$spring_version")
    // end::actuator[]
    compile("org.jsoup:jsoup:1.12.1")

    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.10.0'
    compile group: 'org.springframework.boot', name: 'spring-boot-properties-migrator', version: "$spring_version"
    compile group: 'commons-io', name: 'commons-io', version: '2.6'

    runtime("org.springframework.boot:spring-boot-properties-migrator")
    testCompile group: 'org.mockito', name: 'mockito-core', version: '3.2.4'
    testCompile group: 'org.mockito', name: 'mockito-junit-jupiter', version: '3.2.4'
    testImplementation('org.junit.jupiter:junit-jupiter:5.5.2')
    testImplementation("junit:junit")
    testImplementation("org.springframework.boot:spring-boot-starter-test:$spring_version")
    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    //compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'

}

task createProperties(dependsOn: processResources) {
    doLast {
        new File("$buildDir/resources/main/version.properties").withWriter { w ->
            Properties p = new Properties()
            p['version'] = jar.archiveVersion.get()
            p.store w, null
        }
    }
}

classes {
    dependsOn createProperties
}

test {
    useJUnitPlatform()
    testLogging {
        events "standardOut", "started", "passed", "skipped", "failed"
        showStandardStreams = true
    }
}
