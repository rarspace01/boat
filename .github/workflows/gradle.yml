# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up JDK 16
        uses: actions/setup-java@v2
        with:
          java-version: '16'
          distribution: 'adopt'
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TFDB_APIKEY: ${{ secrets.TFDB_APIKEY }}
          PREMIUMIZE_APIKEY: ${{ secrets.PREMIUMIZE_APIKEY }}
          ALLDEBRID_APIKEY: ${{ secrets.ALLDEBRID_APIKEY }}
        run: ./gradlew build
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v5.5
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          files: "./build/libs/boat.jar"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Restart server
        uses: wei/curl@master
        with:
          args: ${{ secrets.SERVERURL }}/boat/shutdown|| true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: ayltai/setup-graalvm@v1
        with:
          java-version: 16
          graalvm-version: 21.1.0
          native-image: true
      - run: java -version
      - name: Build with Gradle (GraalVM)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TFDB_APIKEY: ${{ secrets.TFDB_APIKEY }}
          PREMIUMIZE_APIKEY: ${{ secrets.PREMIUMIZE_APIKEY }}
          ALLDEBRID_APIKEY: ${{ secrets.ALLDEBRID_APIKEY }}
        run: ./gradlew clean build
      - run: native-image --no-server --no-fallback --allow-incomplete-classpath -jar "./build/libs/boat.jar"
